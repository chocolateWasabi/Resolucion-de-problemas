
# BOJ 11724

import sys

n = 0
m = 0
edge_info = []
graph = {}
visit = []
count = 0

def connect(node): # dfs search
    global visit
    visit[node] = count

    if node in graph:
        for next_node in graph[node]:
            if visit[next_node] == 0:
                connect(next_node)

if __name__ == '__main__':
    n, m = list(map(int, sys.stdin.readline().split()))
    edge_info = [list(map(int, sys.stdin.readline().split())) for i in range(m)]

    for i in range(n+1):
        visit.append(0)

    for edge in edge_info:
        if edge[0] in graph:
            graph[edge[0]].append(edge[1])
        else:
            graph[edge[0]] = [edge[1]]

        if edge[1] in graph:
            graph[edge[1]].append(edge[0])
        else:
            graph[edge[1]] = [edge[0]]

    '''
    for vertex in graph:
        print(vertex, ": ", graph[vertex])'''

    for i in range(1, n+1):
        if visit[i] == 0:
            count = count + 1
            connect(i)

    print(count)